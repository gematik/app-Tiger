templates:
  - name: idp-ref
    product: IDP_REF
    # where to get the server from or where to connect to,
    instanceUri: docker:gstopdr1.top.local/idp/idp-server
    version: 15.0.0-106
    # folder containing all certs and keys used in encrypting/signing the traffic data
    pkiFolder: src/main/java/resources/pki/idp-ref
    # list of regex to be matched by the proxy
    urlMappings:
    imports:
      - GEMATIK_TESTCONFIG=default
    exports:
      - IDP_SERVER=http://idp/.well-known/openid-configuration
      - IDP_SERVER_PORT=${PORT:8080}
    params:

  - name: idp-rise-rru
    product: IDP_RISE
    # where to get the server from or where to connect to,
    instanceUri: external:https://idp-ref.zentral.idp.splitdns.ti-dienste.de/
    # folder containing all certs and keys used in encrypting/signing the traffic data
    pkiFolder:
    # list of regex to be matched by the proxy
    urlMappings:
    imports:
      - GEMATIK_TESTCONFIG=rise-rru
    exports:
      - IDP_SERVER=https://idp-ref.zentral.idp.splitdns.ti-dienste.de/
    params:

  - name: idp-rise-rtu
    product: IDP_RISE
    # where to get the server from or where to connect to,
    instanceUri: external:https://idp-test.zentral.idp.splitdns.ti-dienste.de/
    # folder containing all certs and keys used in encrypting/signing the traffic data
    pkiFolder:
    # list of regex to be matched by the proxy
    urlMappings:
    imports:
      - GEMATIK_TESTCONFIG=rise-rtu
    exports:
      - IDP_SERVER=https://idp-test.zentral.idp.splitdns.ti-dienste.de/.well-known/openid-configuration
    params:

  - name: erzpt-fd-ref
    product: ERZP_FD_REF
    instanceUri: docker:gstopdr1.top.local/erezept/ref-erx-fd-server
    version: 0.15.1
    # folder containing all certs and keys used in encrypting/signing the traffic data
    pkiFolder: src/main/java/resources/pki/erzpt-fd-ref
    # list of regex to be matched by the proxy
    urlMappings:
    # set those as env for docker image and replace ${xxx}
    imports:
      - TOKEN=${IDP_SERVER}
      - TSL=https://download-ref.tsl.ti-dienste.de/ECC/ECC-RSA_TSL-ref.xml
      - http_proxy=http://${PROXYHOST}:${PROXYPORT}
      - https_proxy=http://${PROXYHOST}:${PROXYPORT}
      # telematik-test is needed for download of ocsp pki
      # localhost,
      - no_proxy=*.telematik-test
      #- ENC_KEY=c.fd.enc-erp-erpserverReferenz/c.fd.enc-erp-erpserverReferenz.prv.pem
      #- ENC_CERT=c.fd.enc-erp-erpserverReferenz/c.fd.enc-erp-erpserverReferenz.pem
      #- SIG_KEY=c.fd.sig-erp-erpserverReferenz/c.fd.sig-erp-erpserverReferenz.prv.pem
      #- SIG_CERT=c.fd.sig-erp-erpserverReferenz/c.fd.sig-erp-erpserverReferenz.pem
      - BNETZA=file://./Pseudo-BNetzA-VL-seq24.xml
    exports:
    params:

