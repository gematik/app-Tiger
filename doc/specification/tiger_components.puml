
@startuml

hide stereotype

' left to right direction

skinparam component {
    BackgroundColor Gold
    BorderColor DarkOrange
    BackgroundColor<<External>> LightGray
    BorderColor<<External>> Blue
    BackgroundColor<<Idp>> LightGreen
    BorderColor<<Idp>> Green
    BackgroundColor<<Other>> DeepSkyBlue
    BorderColor<<Other>> Blue
    BackgroundColor<<NextRelease>> LightGray
    FontColor<<NextRelease>> Gray
    BorderColor<<NextRelease>> Gray
    ArrowColor<<HTTP>> DodgerBlue
    FontColor<<HTTP>> Gray
    ArrowFontColor DarkOrange
    ArrowThickness 1
}

skinparam interface {
    BorderColor<<HTTP>> DodgerBlue
}


' left to right direction

' component TigerServer  <<NextRelease>>

package TestSystems as tsys {
    component "RU/TU service instances" as rutu <<External>>
    component "locally started\ndocker containers" as locdock <<Other>>

    component "cloud based\ndocker containers" as clddock <<NextRelease>>
    component "Simulators" as sims <<NextRelease>>
}

component TigerTestEnvMgr as tem
component TigerProxy as tp

package TestSuitePool as suites {
    component "Idp test suite" as its <<Idp>>
    component "Other test suites" as ots <<Other>>
    component TigerTestLib [
      TigerTestLib
      ---
      Basic steps
      ---
      PolarionConnector
      Banner
      Context
      Variables
      JsonChecker
      AfoReporter
      TestCodeParser
      TestResultParser
      SerenityIntegration
    ]
}

component Polarion <<Other>> [
    <img:https://d1yjjnpx0p53s8.cloudfront.net/styles/logo-thumbnail/s3/0024/4635/brand.gif?itok=imrp3xNh{scale=0.5}>
]

component "Current Testsuite" as tdir <<Other>>
component Serenity <<Other>> [
    <img:https://scontent-vie1-1.xx.fbcdn.net/v/t1.18169-9/21740326_1850957461900136_3070866374564879594_n.png?_nc_cat=106&ccb=1-3&_nc_sid=09cbfe&_nc_ohc=Kd-z1agN-TYAX9ox76b&_nc_ht=scontent-vie1-1.xx&oh=d41865fdf71d1bda9660545a57177814&oe=60B8AABD{scale=0.18}>
    <color:white><b>Serenity BDD</b></color>
]




' tem
interface ITestEnvironment as item
' tp
interface "Local Http traffic" as ihttp <<HTTP>>
interface "ProxyConfiguration" as ipconf
' ts
interface "IRBelMessaging" as irbel
'tsys
interface "Routed HTTP traffic" as iroutes <<HTTP>>
'suites
' interface "Steps" as isteps
' interface "Helpers" as ihelpers
interface "Reuse" as ireuse


ihttp -down- tp <<HTTP>>
tdir --> ihttp <<HTTP>> : test traffic

irbel -up-> tdir
tp -up-> irbel : return traffic\nmessages\nform test traffic


locdock -down- iroutes <<HTTP>>
clddock -down- iroutes <<HTTP>>
sims -down- iroutes <<HTTP>>
rutu -down- iroutes <<HTTP>>

tp -left-> iroutes <<HTTP>> : routed test traffic

ipconf -- tp
tem --> ipconf : configure URLs, \nURL mappings and certs

item -left- tem
tdir -left-> item : build me\na test env

tem -down-> locdock : creates containers
tem -left-> sims : starts simulators
ireuse -left- suites
tdir -right-> ireuse

tdir -down--> Serenity : creates detailed\nlocal test reports

Serenity -right-> Polarion
TigerTestLib -down-> Polarion : sync test cases and test results
@enduml