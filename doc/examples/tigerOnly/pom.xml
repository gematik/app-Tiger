<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright (c) 2022 gematik GmbH
  ~ 
  ~ Licensed under the Apache License, Version 2.0 (the License);
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~ 
  ~     http://www.apache.org/licenses/LICENSE-2.0
  ~ 
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an 'AS IS' BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->

<project xmlns="http://maven.apache.org/POM/4.0.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>de.gematik.test.tiger.examples</groupId>
    <artifactId>TigerTestBDD</artifactId>
    <version>1.0.0-SNAPSHOT</version>

    <properties>
        <maven.compiler.source>11</maven.compiler.source>
        <maven.compiler.target>11</maven.compiler.target>

        <!-- please adapt Tiger version property to the most current one obtained from -->
        <!-- maven central:
          https://mvnrepository.com/artifact/de.gematik.test/tiger-test-lib
          or from gematik internal Nexus
          https://build.top.local/nexus/#nexus-search;quick~tiger-test-lib
        -->
        <version.tiger>0.23.2</version.tiger>
        <version.serenity.core>3.2.4</version.serenity.core>
    </properties>

    <!-- tag::dependencies[] -->
    <dependencies>
        <dependency>
            <groupId>de.gematik.test</groupId>
            <artifactId>tiger-test-lib</artifactId>
            <version>${version.tiger}</version>
        </dependency>
        <!-- Optional if you have JUnit5 dependencies
        but use JUnit4 for your driver classes
        <dependency>
            <groupId>org.junit.vintage</groupId>
            <artifactId>junit-vintage-engine</artifactId>
            <version>5.8.2</version>
        </dependency>
        -->
        <!-- needed for the JUnit driver class @CucumberOptions annotation -->
        <dependency>
            <groupId>net.serenity-bdd</groupId>
            <artifactId>serenity-cucumber</artifactId>
            <version>${version.serenity.core}</version>
            <scope>test</scope>
        </dependency>
    </dependencies>
    <!-- end::dependencies[] -->

    <build>
        <plugins>
            <!-- tag::generator-plugin[] -->
            <!-- optional plugin to dynamically create JUnit driver classes on the fly.
            You may omit this plugin if you have written your driver classes manually.
            -->
            <plugin>
                <groupId>de.gematik.test</groupId>
                <artifactId>tiger-maven-plugin</artifactId>
                <version>${version.tiger}</version>
                <executions>
                    <execution>
                        <configuration>
                            <!-- mandatory -->
                            <glues>
                                <glue>de.gematik.test.tiger.glue</glue>
                                <!-- add your packages here -->
                            </glues>
                            <!-- optional -->
                            <featuresDir>${project.basedir}/src/test/resources/features</featuresDir>
                            <!-- optional -->
                            <includes>
                                <include>**/*.feature</include>
                            </includes>
                            <!-- optional -->
                            <driverPackage>
                                de.gematik.test.tiger.examples.bdd.drivers
                            </driverPackage>
                            <!-- optional -->
                            <!--suppress UnresolvedMavenProperty -->
                            <driverClassName>Driver${ctr}IT</driverClassName>
                            <!-- optional, defaults to the templated located at
                            /src/main/resources/driverClassTemplate.jtmpl
                            in the tiger-maven-plugin module.
                            Use separate template file if you have spring boot apps to test
                            or need to do some more fancy set up stuff.
                            <templateFile>${project.basedir}/..../XXXX.jtmpl</templateFile>
                            -->
                            <!-- optional -->
                            <skip>false</skip>
                        </configuration>
                        <phase>generate-test-sources</phase>
                        <id>generate-tiger-drivers</id>
                        <goals>
                            <goal>generate-drivers</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>generate-tiger-report</id>
                        <goals>
                            <goal>
                                generate-serenity-reports
                            </goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <!-- end::generator-plugin[] -->

            <!-- tag::failsafe-plugin[] -->
            <!-- Runs the tests by calling the JUnit driver classes -->
            <!-- To filter features / scenarios use the system property
                 -Dcucumber.filter.tags -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <version>${version.maven.failsafe}</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>integration-test</goal>
                            <goal>verify</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <includes>
                        <!-- adapt to the class names of your driver classes -->
                        <include>**/Driver*IT.java</include>
                    </includes>
                </configuration>
            </plugin>
            <!-- end::failsafe-plugin[] -->
        </plugins>
    </build>
</project>
