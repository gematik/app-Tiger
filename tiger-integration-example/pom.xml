<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <artifactId>tiger-integration-example</artifactId>

    <parent>
        <artifactId>tiger</artifactId>
        <groupId>de.gematik.test</groupId>
        <version>2.1.5-SNAPSHOT</version>
        <relativePath>../pom.xml</relativePath>
    </parent>

    <packaging>jar</packaging>

    <dependencies>
        <dependency>
            <groupId>de.gematik.test</groupId>
            <artifactId>tiger-test-lib</artifactId>
            <version>${project.version}</version>
        </dependency>
        <!-- needed for support of junit5  driver classes -->
        <dependency>
            <groupId>org.junit.platform</groupId>
            <artifactId>junit-platform-suite</artifactId>
            <version>1.9.2</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>io.cucumber</groupId>
            <artifactId>cucumber-junit-platform-engine</artifactId>
            <version>${version.cucumber}</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>de.gematik.test</groupId>
                <artifactId>tiger-maven-plugin</artifactId>
                <version>${project.version}</version>
                <executions>
                    <execution>
                        <configuration>

                            <!-- mandatory -->
                            <glues>
                                <glue>de.gematik.test.tiger.glue</glue>
                                <!-- add your packages here -->
                            </glues>
                            <!-- optional -->
                            <featuresDir>${project.basedir}/src/test/resources/features</featuresDir>
                            <!-- optional -->
                            <includes>
                                <include>**/*.feature</include>
                            </includes>
                            <!-- optional -->
                            <driverPackage>
                                de.gematik.test.tiger.examples.bdd.drivers
                            </driverPackage>
                            <!-- optional -->
                            <!--suppress UnresolvedMavenProperty -->
                            <driverClassName>Driver${ctr}IT</driverClassName>
                            <!-- optional, defaults to the templated located at
                            /src/main/resources/driverClassTemplate.jtmpl
                            in the tiger-maven-plugin module.
                            Use separate template file if you have spring boot apps to test
                            or need to do some more fancy set up stuff.
                            -->
                            <junit5Driver>true</junit5Driver>
                            <!-- optional -->
                            <skip>false</skip>

                            <!-- Optional Example Configuration which shows all optional properties with its default configuration -->
                            <!--       <skip>false</skip>-->
                            <!--       <featuresDir>${project.basedir}</featuresDir>-->
                            <!--       <includes>-->
                            <!--           <include>**/*.feature</include>-->
                            <!--       </includes>-->
                            <!--       <excludes></excludes>-->
                            <!--       <glues>-->
                            <!--           <glue>${project.groupId}</glue>-->
                            <!--       </glues>-->
                            <!--       <driverPackage>-->
                            <!--           de.gematik.test.tiger.serenity.drivers-->
                            <!--       </driverPackage>-->
                            <!--       <driverClassName>Driver${ctr}IT</driverClassName>-->
                            <!--       <targetFolder>${project.build.directory}</targetFolder>-->
                        </configuration>
                        <phase>generate-test-sources</phase>
                        <id>prepare-and-verify-tiger-tests-and-results</id>
                        <!--
                            You MUST define the two goals in two different executions
                            to avoid the report being generated before the test run
                        -->
                        <goals>
                            <goal>generate-drivers</goal>
                        </goals>
                    </execution>
                    <execution>
                        <goals>
                            <goal>generate-serenity-reports</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <!-- FIXME: marmer 10.03.2022 Fieser Hack, mus weg (mit tiger-testenv-yml -->
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <version>3.6.0</version>
                <executions>
                    <execution>
                        <id>copy</id>
                        <phase>generate-test-resources</phase>
                        <goals>
                            <goal>copy</goal>
                        </goals>
                        <configuration>
                            <artifactItems>
                                <artifactItem>
                                    <groupId>org.jenkins-ci</groupId>
                                    <artifactId>winstone</artifactId>
                                    <version>5.24</version>
                                    <type>jar</type>
                                    <overWrite>true</overWrite>
                                    <outputDirectory>${project.build.directory}</outputDirectory>
                                    <destFileName>winstone.jar</destFileName>
                                </artifactItem>
                            </artifactItems>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>3.1.2</version>
                <configuration><skip>true</skip></configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <version>${version.maven.failsafe}</version>
                <configuration>
                    <!--
                        WorkflowUI needs this to allow it to block execution of maven,
                        else maven will try to kill and destroy the tiger spring boot apps
                     -->
                    <forkedProcessExitTimeoutInSeconds>18000</forkedProcessExitTimeoutInSeconds>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>integration-test</goal>
                            <goal>verify</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <version>3.3.0</version>
                <executions>
                    <execution>
                        <id>empty-javadoc-jar</id>
                        <phase>package</phase>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                        <configuration>
                            <classifier>javadoc</classifier>
                            <classesDirectory>${project.basedir}/src/test/java/</classesDirectory>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <artifactId>jacoco-maven-plugin</artifactId>
                <groupId>org.jacoco</groupId>
            </plugin>
            <plugin>
                <artifactId>sonar-maven-plugin</artifactId>
                <groupId>org.sonarsource.scanner.maven</groupId>
            </plugin>
        </plugins>
    </build>
</project>
